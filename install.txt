================================================================================
    CON BRAVURA – PRACTICE & REPERTOIRE ASSISTANT
    Installation and Deployment Guide
================================================================================

OVERVIEW
--------
Con Bravura is a classical music practice management application featuring:
- Beautiful classical music-themed interface
- Node.js/Express REST API backend
- MariaDB database with multi-user support
- JWT authentication and secure user management
- Comprehensive practice tracking and analytics

This guide covers installation for both development and production environments.

SYSTEM REQUIREMENTS
------------------
- Node.js 16.0 or higher (recommended: 18.x LTS)
- MariaDB 10.5 or higher (recommended: 10.11 LTS)
- npm or yarn package manager
- Git (for cloning repository)
- Modern web browser (Chrome, Firefox, Safari, Edge)

QUICK START (Development)
------------------------
1. Clone the repository:
   git clone https://github.com/Plummlumur/piano-practice-manager.git
   cd piano-practice-manager

2. Install backend dependencies:
   cd backend
   npm install

3. Set up MariaDB database:
   # Create database and user (see detailed instructions below)
   mysql -u root -p
   CREATE DATABASE con_bravura CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
   CREATE USER 'conbravura'@'localhost' IDENTIFIED BY 'your_password';
   GRANT ALL PRIVILEGES ON con_bravura.* TO 'conbravura'@'localhost';
   FLUSH PRIVILEGES;
   EXIT;

4. Set up environment variables:
   cp .env.example .env
   # Edit .env with your database credentials (see example below)

5. Initialize database:
   npm run db:init

6. Seed with demo data (optional):
   npm run db:seed

7. Start the backend server:
   npm run dev

8. Serve the frontend:
   # In a new terminal, from project root:
   cd ..
   python3 -m http.server 8080
   # OR use any web server

9. Access the application:
   Open http://localhost:8080 in your browser
   
   Demo Account:
   Username: demo_user
   Password: DemoPassword123!

DETAILED INSTALLATION INSTRUCTIONS
==================================

STEP 1: PREREQUISITES
--------------------
1.1. Install Node.js
   - Download from: https://nodejs.org/
   - Verify installation: node --version && npm --version

1.2. Install MariaDB
   - Download from: https://mariadb.org/download/
   - Or use package manager:
     # Ubuntu/Debian
     sudo apt update && sudo apt install mariadb-server
     
     # macOS with Homebrew
     brew install mariadb
     
     # Windows: Download installer from website

1.3. Start MariaDB service
   - Linux: sudo systemctl start mariadb
   - macOS: brew services start mariadb
   - Windows: Start from Services or system tray

1.4. Secure MariaDB installation
   sudo mysql_secure_installation

STEP 2: DATABASE SETUP
---------------------
2.1. Create database and user
   mysql -u root -p
   CREATE DATABASE con_bravura CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
   CREATE USER 'conbravura'@'localhost' IDENTIFIED BY 'your_secure_password';
   GRANT ALL PRIVILEGES ON con_bravura.* TO 'conbravura'@'localhost';
   FLUSH PRIVILEGES;
   EXIT;

2.2. Test database connection
   mysql -u conbravura -p con_bravura

STEP 3: BACKEND INSTALLATION
---------------------------
3.1. Navigate to backend directory
   cd backend

3.2. Install dependencies
   npm install

3.3. Configure environment variables
   cp .env.example .env
   
   Edit .env file with your settings:
   # Database Configuration
   DB_HOST=localhost
   DB_PORT=3306
   DB_NAME=con_bravura
   DB_USER=conbravura
   DB_PASSWORD=your_secure_password
   DB_CONNECTION_LIMIT=10
   
   # JWT Configuration (IMPORTANT: Generate a secure secret!)
   JWT_SECRET=your_very_secure_jwt_secret_key_here_min_32_chars
   JWT_EXPIRES_IN=7d
   
   # Server Configuration
   PORT=3000
   NODE_ENV=development
   
   # Security
   BCRYPT_ROUNDS=12
   CORS_ORIGIN=http://localhost:8080
   
   # Rate Limiting
   RATE_LIMIT_WINDOW_MS=900000
   RATE_LIMIT_MAX_REQUESTS=100
   
   # Logging
   LOG_LEVEL=info
   LOG_FILE=logs/app.log
   
   IMPORTANT: Generate a secure JWT secret:
   node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"

3.4. Initialize database schema
   npm run db:init

3.5. Seed database with demo data (optional)
   npm run db:seed
   
   Demo credentials:
   Username: demo_user
   Password: DemoPassword123!

STEP 4: FRONTEND SETUP
---------------------
4.1. Navigate to project root
   cd ..

4.2. Update API endpoint (if different from localhost:3000)
   Edit js/api-client.js:
   constructor(baseURL = 'http://your-server:3000/api')

4.3. Serve frontend files
   The frontend must be served through HTTP (not file://) for API calls to work.
   
   Option A: Python HTTP server (recommended for development)
   python3 -m http.server 8080
   # OR for Python 2:
   python -m SimpleHTTPServer 8080
   
   Option B: Node.js http-server
   npm install -g http-server
   http-server -p 8080 -c-1
   
   Option C: Live Server (VS Code extension)
   Install "Live Server" extension and right-click index.html -> "Open with Live Server"
   
   Option D: Use any web server (Apache, Nginx, etc.)
   
   IMPORTANT: The frontend MUST be served via HTTP protocol, not opened directly
   as a file:// URL, otherwise API requests will be blocked by CORS policy.

STEP 5: START THE APPLICATION
----------------------------
5.1. Start backend server
   cd backend
   npm run dev    # Development mode with auto-reload
   # OR
   npm start      # Production mode

5.2. Access the application
   Open browser and navigate to: http://localhost:8080

PRODUCTION DEPLOYMENT
====================

ENVIRONMENT PREPARATION
----------------------
1. Set NODE_ENV=production in .env
2. Use strong JWT_SECRET (generate with: openssl rand -base64 32)
3. Configure proper CORS_ORIGIN for your domain
4. Set up SSL/TLS certificates
5. Use a process manager (PM2, systemd, etc.)

STEP 1: SERVER SETUP
-------------------
1.1. Install dependencies
   # Ubuntu/Debian
   sudo apt update
   sudo apt install nginx mariadb-server nodejs npm git

1.2. Create application user
   sudo useradd -m -s /bin/bash conbravura
   sudo su - conbravura

1.3. Clone repository
   git clone https://github.com/Plummlumur/piano-practice-manager.git
   cd piano-practice-manager

STEP 2: DATABASE SETUP
---------------------
2.1. Secure MariaDB
   sudo mysql_secure_installation

2.2. Create production database
   mysql -u root -p
   CREATE DATABASE con_bravura_prod CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
   CREATE USER 'conbravura_prod'@'localhost' IDENTIFIED BY 'very_secure_password';
   GRANT ALL PRIVILEGES ON con_bravura_prod.* TO 'conbravura_prod'@'localhost';
   FLUSH PRIVILEGES;
   EXIT;

STEP 3: BACKEND DEPLOYMENT
-------------------------
3.1. Install PM2 process manager
   sudo npm install -g pm2

3.2. Configure environment
   cd backend
   cp .env.example .env
   # Edit .env with production settings

3.3. Install dependencies
   npm install --only=production

3.4. Initialize database
   npm run db:init

3.5. Start with PM2
   pm2 start server.js --name "con-bravura-backend"
   pm2 startup  # Enable auto-start on boot
   pm2 save     # Save current process list

STEP 4: NGINX CONFIGURATION
--------------------------
4.1. Create Nginx configuration
   sudo nano /etc/nginx/sites-available/con-bravura

   server {
       listen 80;
       server_name your-domain.com;
       
       # Frontend static files
       location / {
           root /home/conbravura/piano-practice-manager;
           index index.html;
           try_files $uri $uri/ /index.html;
       }
       
       # API proxy
       location /api {
           proxy_pass http://localhost:3000;
           proxy_http_version 1.1;
           proxy_set_header Upgrade $http_upgrade;
           proxy_set_header Connection 'upgrade';
           proxy_set_header Host $host;
           proxy_set_header X-Real-IP $remote_addr;
           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
           proxy_set_header X-Forwarded-Proto $scheme;
           proxy_cache_bypass $http_upgrade;
       }
   }

4.2. Enable the site
   sudo ln -s /etc/nginx/sites-available/con-bravura /etc/nginx/sites-enabled/
   sudo nginx -t
   sudo systemctl reload nginx

STEP 5: SSL/TLS SETUP (Recommended)
----------------------------------
5.1. Install Certbot
   sudo apt install certbot python3-certbot-nginx

5.2. Obtain SSL certificate
   sudo certbot --nginx -d your-domain.com

5.3. Test auto-renewal
   sudo certbot renew --dry-run

STEP 6: FIREWALL CONFIGURATION
-----------------------------
6.1. Configure UFW (Ubuntu)
   sudo ufw allow OpenSSH
   sudo ufw allow 'Nginx Full'
   sudo ufw enable

MONITORING AND MAINTENANCE
=========================

MONITORING
----------
1. Check backend status:
   pm2 status
   pm2 logs con-bravura-backend

2. Check database:
   mysql -u conbravura_prod -p con_bravura_prod
   SHOW TABLES;

3. Check Nginx:
   sudo systemctl status nginx
   sudo tail -f /var/log/nginx/error.log

BACKUP STRATEGY
--------------
1. Database backup script:
   #!/bin/bash
   DATE=$(date +%Y%m%d_%H%M%S)
   mysqldump -u conbravura_prod -p con_bravura_prod > /backups/con_bravura_$DATE.sql
   gzip /backups/con_bravura_$DATE.sql

2. Automated backups with cron:
   crontab -e
   # Daily backup at 2 AM
   0 2 * * * /home/conbravura/backup.sh

UPDATES
-------
1. Update application:
   cd /home/conbravura/piano-practice-manager
   git pull origin main
   cd backend
   npm install --only=production
   pm2 restart con-bravura-backend

2. Database migrations:
   npm run db:migrate  # If migration scripts exist

TROUBLESHOOTING
==============

COMMON ISSUES
------------
1. Database connection failed
   - Check MariaDB service: sudo systemctl status mariadb
   - Verify credentials in .env file
   - Test connection: mysql -u conbravura -p con_bravura
   - Check if database exists: SHOW DATABASES;
   - Verify user permissions: SHOW GRANTS FOR 'conbravura'@'localhost';

2. Backend server won't start
   - Port already in use: sudo netstat -tulpn | grep :3000
   - Kill conflicting process: sudo kill -9 <PID>
   - Check Node.js version: node --version (must be 16+)
   - Missing dependencies: rm -rf node_modules && npm install

3. Frontend can't connect to backend
   - CORS error: Check CORS_ORIGIN in .env matches frontend URL
   - Network error: Verify backend is running on http://localhost:3000
   - Check browser console for specific error messages
   - Ensure frontend is served via HTTP, not file:// protocol

4. Authentication issues
   - "Token expired" error: JWT_SECRET changed or token expired
   - Login fails: Check backend logs for authentication errors
   - Clear browser data: localStorage.clear() in browser console
   - Verify demo user exists: npm run db:seed

5. Database initialization fails
   - Table doesn't exist errors: Use fixed init script: npm run db:init-fixed
   - Permission denied: Check MariaDB user privileges
   - Schema errors: Drop database and recreate: DROP DATABASE con_bravura;
   - Connection timeout: Check DB_CONNECTION_LIMIT in .env
   - SQL syntax errors: Check MariaDB version compatibility
   - View creation fails: Tables must be created before views

6. API endpoints return 404
   - Backend not running: Check if server started successfully
   - Wrong API URL: Verify baseURL in js/api-client.js
   - Route not found: Check backend logs for request paths

7. npm install fails
   - Clear npm cache: npm cache clean --force
   - Delete node_modules: rm -rf node_modules package-lock.json
   - Update npm: npm install -g npm@latest
   - Check Node.js compatibility with dependencies

LOGS AND DEBUGGING
-----------------
1. Backend logs:
   pm2 logs con-bravura-backend
   tail -f backend/logs/app.log

2. Database logs:
   sudo tail -f /var/log/mysql/error.log

3. Nginx logs:
   sudo tail -f /var/log/nginx/access.log
   sudo tail -f /var/log/nginx/error.log

PERFORMANCE OPTIMIZATION
=======================

DATABASE OPTIMIZATION
--------------------
1. Add indexes for better performance:
   CREATE INDEX idx_user_pieces ON piano_pieces(user_id, status);
   CREATE INDEX idx_session_date ON training_sessions(user_id, session_date);

2. Optimize MariaDB configuration:
   sudo nano /etc/mysql/mariadb.conf.d/50-server.cnf
   # Add under [mysqld]
   innodb_buffer_pool_size = 256M
   query_cache_size = 64M

NGINX OPTIMIZATION
-----------------
1. Enable gzip compression:
   gzip on;
   gzip_types text/plain text/css application/json application/javascript;

2. Add caching headers:
   location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
       expires 1y;
       add_header Cache-Control "public, immutable";
   }

NODE.JS OPTIMIZATION
-------------------
1. Use production environment:
   NODE_ENV=production

2. Enable clustering (if needed):
   pm2 start server.js -i max --name "con-bravura-backend"

SECURITY CHECKLIST
==================
☐ Change default database passwords
☐ Use strong JWT secret
☐ Enable SSL/TLS certificates
☐ Configure firewall rules
☐ Set up regular backups
☐ Keep dependencies updated
☐ Monitor access logs
☐ Use fail2ban for SSH protection
☐ Disable unnecessary services
☐ Set up monitoring/alerting

SUPPORT
=======
For issues and support:
- GitHub: https://github.com/Plummlumur/piano-practice-manager/issues
- Documentation: See README.md and backend/README.md
- API Documentation: http://localhost:3000/api (when running)

VERIFICATION CHECKLIST
=====================
After installation, verify everything works:

☐ Backend server starts without errors
☐ Database connection successful
☐ Frontend loads at http://localhost:8080
☐ Can register a new user account
☐ Can login with demo account (demo_user / DemoPassword123!)
☐ Dashboard displays without errors
☐ Can add a new musical piece
☐ Can create a practice session
☐ Charts display correctly
☐ Calendar view works (week/month toggle)
☐ Can logout and login again

QUICK TEST COMMANDS
------------------
# Test backend API health
curl http://localhost:3000/health

# Test database connection
mysql -u conbravura -p con_bravura -e "SHOW TABLES;"

# Check backend logs
cd backend && npm run dev

# Test authentication
curl -X POST http://localhost:3000/api/auth/login \
  -H "Content-Type: application/json" \
  -d '{"username":"demo_user","password":"DemoPassword123!"}'

DATABASE INITIALIZATION TROUBLESHOOTING
---------------------------------------
If you encounter "Table doesn't exist" errors during database initialization:

PROBLEM: "Database query error: Table 'con_bravura.users' doesn't exist"

SOLUTION 1: Use the fixed initialization script
cd backend
npm run db:init-fixed

SOLUTION 2: Manual database setup
mysql -u root -p
DROP DATABASE IF EXISTS con_bravura;
CREATE DATABASE con_bravura CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
EXIT;

cd backend
npm run db:init-fixed
npm run db:seed

SOLUTION 3: Step-by-step manual execution
mysql -u conbravura -p con_bravura < database/init-tables-only.sql
mysql -u conbravura -p con_bravura < database/init-views.sql

The fixed script ensures tables are created before views, preventing dependency errors.

GETTING HELP
============
If you encounter issues:

1. Check the troubleshooting section above
2. Review backend logs: backend/logs/app.log
3. Check browser console for frontend errors
4. Verify all prerequisites are installed correctly
5. Try the demo account first before creating new users

For additional support:
- GitHub Issues: https://github.com/Plummlumur/piano-practice-manager/issues
- Backend API docs: http://localhost:3000/api (when running)
- Frontend features: See README.md and CLAUDE.md

VERSION INFORMATION
==================
Installation Guide Version: 1.1.0
Compatible with: Con Bravura v1.0.0-beta (MariaDB Backend)
Backend API Version: 1.0.0
Database Schema Version: 1.0.0
Last Updated: 2025-01-18

CHANGELOG
=========
v1.1.0 (2025-01-18):
- Added MariaDB backend installation instructions
- Enhanced troubleshooting section with API-specific issues
- Added verification checklist and test commands
- Improved environment configuration examples
- Added frontend serving requirements and CORS information

v1.0.0 (2025-01-18):
- Initial installation guide
- Basic development and production setup
- Security and deployment instructions

================================================================================